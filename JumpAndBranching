#Jump Operators:
================

<b>Unconditional Jump:</b>

# JMP:
------
	JMP is the unconditional jump command. This is the underlying CPU command of "goto" and just like "goto" its a one way ticket to hell.
	syntax:	Similar to conditional jump statements.
		lebel: statement(s)
			.
			.
			.
		jmp lebel
		
<b>Conditional Jump:</b>

# JNZ and JZ:
-------------
	Jump if not zero. Examines the Zero Flag. If ZF is set, no jump is made and program continues. If ZF is not set, then jump condition
	is fulfilled and program jump to lebel.
	syntax:
		lebel: statement(s)
			.
			.
			.
		jnz lebel
	example:
	1	mov eax, 5
	2	DoMore: dec eax
	3	jnz DoMore	; Program will keep jumping back to line 2 and decrement eax until its 0.
				; This is equivalent to: while(var!=0) var--;
				
	JZ - Jump if zero, works exactly the same as JNZ, but it makes the jump when ZF is set. Note: zeroing any register from RAX to R15
	can trip off Zero Flag. It is the zeroing/not-zeroing process, by DEC or INC or whatever operation that sets ZF, no matter what
	register it is operating on.


